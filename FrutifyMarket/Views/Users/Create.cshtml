@model FrutifyMarket.Controllers.Users

@{
    ViewBag.Title = "Create";
}

<div class="card shadow mb-5" style="max-width: 600px; margin: 0 auto;">
    <div class="card-bodt">
        <div class="d-flex justify-content-center">
            <img class="rounded-circle align-content-center" style="width: 200px; height: 200px; margin-top:20px;" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRURK_cmChZK8axkrMrqnO4KxYyq-a5E_8WhhlK7k0eSA&s" alt="Fruitify Market">
        </div>
        <h5 class="card-title text-center">Benvenuto</h5>
        <h6 class="card-subtitle mb-2 text-center">Crea il tuo Account</h6>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cognome, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Cognome, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @required = "required", type = "email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @required = "required", type = "password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CodFisc, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.CodFisc, new { htmlAttributes = new { @class = "form-control", @required = "required", pattern = ".{16}", title = "Il codice fiscale deve essere composto da 16 caratteri esatti." } })
                        @Html.ValidationMessageFor(model => model.CodFisc, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Citta, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Citta, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Citta, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Indirizzo, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cap, htmlAttributes: new { @class = "col-form-label" })
                        @Html.EditorFor(model => model.Cap, new { htmlAttributes = new { @class = "form-control", @required = "required", type = "number" } })
                        @Html.ValidationMessageFor(model => model.Cap, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.Label("Reinserisci Password", htmlAttributes: new { @class = "col-form-label" })
                        @Html.Password("ReinserisciPassword", null, new { @class = "form-control", @required = "required" })
                    </div>

                    <div class="form-group" style="visibility: hidden;">
                        @Html.LabelFor(model => model.Ruolo, htmlAttributes: new { @class = "col-form-label" })
                        @Html.TextBoxFor(model => model.Ruolo, new { @class = "form-control", @readonly = "readonly", @Value = "Cliente" })
                        @Html.ValidationMessageFor(model => model.Ruolo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-center" style="margin-top:-50px">
                <button class="submit btn w-75" type="submit">Registrati</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $("#ReinserisciPassword").on("keyup", function () {
                var password = $("#Password").val();
                var reinserisciPassword = $(this).val();

                if (password !== reinserisciPassword) {
                    $(this).addClass("is-invalid");
                } else {
                    $(this).removeClass("is-invalid");
                }
            });

            $("form").submit(function (event) {
                // Controllo della lunghezza del nome utente
                var username = $("#Username").val();
                if (username.length < 5) {
                    alert("Il nome utente deve essere lungo almeno 5 caratteri.");
                    event.preventDefault(); // Impedisce l'invio del modulo
                    return false;
                }

                // Controllo della lunghezza della password
                var password = $("#Password").val();
                if (password.length < 8) {
                    alert("La password deve essere lunga almeno 8 caratteri.");
                    event.preventDefault(); // Impedisce l'invio del modulo
                    return false;
                }
            });
        });
    </script>
}
